// global vars

@define checkpid %(if (pid() != targetpid) next %)

global targetpid
probe begin {
  targetpid = target()
}

@define showmap(event, obj) %(
  print(@event)
  foreach([key] in @obj) {
    printf(" %s=%d", key, @obj[key])
  }
  println()
  delete @obj
%)

/*
global vfsbytes
probe vfs.read*.return, vfs.write*.return {
  @checkpid
  if ($return <= 0) next
  if (devname == "N/A")
    tag = sprintf("%s.cached", name)
  else
    tag = sprintf("%s.uncached", name)
  vfsbytes[tag] += $return
}
*/

global vfstime
probe vfs.*.return {
  @checkpid
  vfstime[name] += gettimeofday_us() - @entry(gettimeofday_us())
}

function show_vfs() {
  @showmap("vfstime", vfstime)
  //@showmap("vfsbytes", vfsbytes)
}

probe bitcoind = process("/home/evan/code/bitcoin/src/bitcoind") {
}

// record when cache flushes start
probe bitcoind.mark("cache__flush") {
  t = gettimeofday_us()
  secs = t / 1000000
  micros = t % 1000000
  printf("flush t=%lu.%06lu num_coins=%lu num_bytes=%lu\n", secs, micros, $arg1, $arg2)
}

// record cache hits
global hits
probe bitcoind.mark("cache__hit") {
  hits++
}

// record cache misses
global misses
probe bitcoind.mark("cache__miss") {
  misses++
}

function show_cache() {
  printf("cache hits=%d misses=%d\n", hits, misses)
  hits=0
  misses=0
}

probe bitcoind.mark("finish__ibd") {
  println("finish_ibd")
  exit()
}

global tip
probe bitcoind.mark("update__tip") {
  tip["height"] = $arg1
  tip["utxo_count"] = $arg2
  tip["utxo_memory"] = $arg3
  tip["progress"] = $arg4
}

global ioreqs
probe ioblock_trace.request {
  ioreqs++
}

global mpages
probe vfs.do_mpage_readpage, kernel.function("ext4_mpage_readpages") {
  @checkpid
  mpages += $nr_pages
}

function show_ioreqs() {
  printf("ioreqs bios=%lu mpage_readpages=%lu\n", ioreqs, mpages)
  ioreqs = 0
  mpages = 0
}


probe vfs.do_mpage_readpage.return, kernel.function("ext4_mpage_readpages").return {
  @checkpid
  vfstime["mpage_readpages"] += gettimeofday_us() - @entry(gettimeofday_us())
}

probe timer.sec(10) {
  // print the timestamp for these events
  t = gettimeofday_us()
  secs = t / 1000000
  nanos = t % 1000000
  printf("time t=%lu.%06lu\n", secs, nanos)

  // now show the events
  @showmap("updatetip", tip)
  show_cache()
  show_ioreqs()
  show_vfs()
}
